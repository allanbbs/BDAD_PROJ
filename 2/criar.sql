PRAGMA foreign_keys=ON;
BEGIN TRANSACTION;
drop table if exists client;
drop table if exists address;
drop table if exists district;
drop table if exists country;
drop table if exists pay_meth;
drop table if exists orderr;
drop table if exists category;
drop table if exists payment_info;
drop table if exists product;
drop table if exists quantity;
drop table if exists rating;
drop table if exists delivery_destination;
drop table if exists ordered;
drop table if exists order_address;
drop table if exists address_district;
drop table if exists country_district;
drop table if exists pay_info_client;
drop table if exists order_payment;

CREATE TABLE client(nif PRIMARY KEY NOT NULL, name text, email text NOT NULL, birthdate date, gender text, contact int, check(email!=''));
CREATE TABLE address(street text NOT NULL, door_number integer, floor_number integer, enterprise boolean, PRIMARY KEY(street, door_number, floor_number), check(floor_number>=0 and door_number>=0 and street!=''));
CREATE TABLE district(dName PRIMARY KEY NOT NULL, check(dName!=''));
CREATE TABLE country(cName PRIMARY KEY NOT NULL, check(cName!=''));
CREATE TABLE pay_meth(pName PRIMARY KEY NOT NULL, check(pName!=''));
CREATE TABLE orderr(order_code integer PRIMARY KEY, processed bool, check(order_code>=0));
CREATE TABLE category(catename UNIQUE NOT NULL, check(catename!=''));
CREATE TABLE payment_info(iban PRIMARY KEY NOT NULL, swift integer UNIQUE, card_number integer, safety_number integer NOT NULL, cellphone_number integer, check(iban>=0 and safety_number>=0));
CREATE TABLE product(serial_code PRIMARY KEY NOT NULL, value number, prod_name text NOT NULL, description text, check(prod_name!=''));
--;
CREATE TABLE quantity(order_code integer references orderr, s_code integer references product, quant integer, PRIMARY KEY(order_code, s_code), check(quant>0));
CREATE TABLE rating(nif number references client, serial_code number references product, rate integer, PRIMARY KEY(nif, serial_code), check(rate>=0));
CREATE TABLE delivery_destination(nif integer references client, street text  NOT NULL, door_number integer, floor_number integer, PRIMARY KEY(nif, street, door_number, floor_number), foreign key(street, door_number, floor_number) references address);
CREATE TABLE ordered(nif references client, order_code number references orderr, PRIMARY KEY(nif, order_code));
CREATE TABLE order_address(order_code integer references orderr, street text, door_number number, floor_number number, PRIMARY KEY(order_code, street, door_number, floor_number),FOREIGN KEY(street,door_number,floor_number) references address);
CREATE TABLE address_district(street text, door_number integer, floor_number integer, dName text references district, PRIMARY KEY(street, door_number, floor_number, dName),foreign key(street,door_number,floor_number) references address);
CREATE TABLE country_district(dName text references district, cName references country, PRIMARY KEY(dName, cName));
CREATE TABLE pay_info_client(iban integer references payment_info, nif integer references client, PRIMARY KEY(iban, nif));             
CREATE TABLE order_payment (order_code references orderr, iban references payment_info, PRIMARY KEY(order_code, iban));